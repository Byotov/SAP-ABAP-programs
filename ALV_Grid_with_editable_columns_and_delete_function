*&---------------------------------------------------------------------*
*& Report  Z_TEST_ALV_GRID_SAVE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT Z_TEST_ALV_GRID_SAVE.


"Declaration
DATA: it_spfli TYPE TABLE OF spfli,
      wa_spfli TYPE spfli.

DATA: it_spflicp TYPE STANDARD TABLE OF spfli,
      it_changes TYPE STANDARD TABLE OF spfli.

DATA: wa_fieldcat TYPE slis_fieldcat_alv,
      it_fieldcat TYPE slis_t_fieldcat_alv,
      ls_layout   TYPE slis_layout_alv.

"Make_fieldcat
DATA: lv_index TYPE int1.
lv_index = 0.

SELECT *
  FROM spfli
  INTO TABLE it_spfli.

wa_fieldcat-fieldname  = 'CARRID'.
wa_fieldcat-seltext_m  = 'CarrId'.
wa_fieldcat-col_pos    = lv_index + 1.
wa_fieldcat-outputlen  = 10.
wa_fieldcat-key        = 'X'.
wa_fieldcat-just       = 'L'.
APPEND wa_fieldcat TO it_fieldcat.
CLEAR wa_fieldcat.

wa_fieldcat-fieldname  = 'CONNID'.
wa_fieldcat-seltext_m  = 'ConnId'.
wa_fieldcat-col_pos    = lv_index + 1.
wa_fieldcat-outputlen  = 10.
wa_fieldcat-key        = 'X'.
wa_fieldcat-just       = 'C'.
APPEND wa_fieldcat TO it_fieldcat.
CLEAR wa_fieldcat.

wa_fieldcat-fieldname  = 'CITYFROM'.
wa_fieldcat-seltext_m  = 'City From'.
wa_fieldcat-col_pos    = lv_index + 1.
wa_fieldcat-outputlen  = 30.
wa_fieldcat-just       = 'L'.
wa_fieldcat-edit       = 'X'.
APPEND wa_fieldcat TO it_fieldcat.
CLEAR wa_fieldcat.

wa_fieldcat-fieldname  = 'CITYTO'.
wa_fieldcat-seltext_m  = 'City To'.
wa_fieldcat-col_pos    = lv_index + 1.
wa_fieldcat-outputlen  = 30.
wa_fieldcat-just       = 'L'.
APPEND wa_fieldcat TO it_fieldcat.
CLEAR wa_fieldcat.

"Show ALV-Grid

it_spflicp[] = it_spfli[].

ls_layout-zebra = 'X'.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
 EXPORTING
   I_CALLBACK_PROGRAM                = sy-repid
   I_CALLBACK_PF_STATUS_SET          = 'PF_STATUS_SET'
   I_CALLBACK_USER_COMMAND           = 'USER_COMMAND'
   IS_LAYOUT                         = ls_layout
   IT_FIELDCAT                       = it_fieldcat
  TABLES
   T_OUTTAB                          = it_spfli.

*IF SY-SUBRC <> 0.
** Implement suitable error handling here
*ENDIF.

"Get_data
FORM get_data.

SELECT *
  FROM spfli
  INTO TABLE it_spfli.

ENDFORM.

"Form GUI Status
FORM pf_status_set USING extab TYPE slis_t_extab.

      set PF-STATUS 'STANDARD'.

ENDFORM.

"Form SAVE Data

FORM f_save_data.

  DATA: wa_spflicp TYPE spfli,
        wa_spfli_tmp TYPE spfli.

  CLEAR it_changes[].

  LOOP AT it_spfli INTO wa_spfli.
    READ TABLE it_spflicp INTO wa_spflicp INDEX sy-index.
    IF wa_spflicp NE wa_spfli.
      APPEND wa_spfli TO it_changes.
      MOVE-CORRESPONDING wa_spfli to wa_spfli_tmp.
      MODIFY spfli FROM wa_spfli_tmp.
    ENDIF.
    CLEAR wa_spflicp.
   ENDLOOP.

ENDFORM.

"Form delete data
FORM f_delete_data USING wa_spfli TYPE spfli.

  DELETE FROM spfli
    where  carrid = wa_spfli-carrid
    and connid = wa_spfli-connid.

  IF sy-subrc = 0.
    MESSAGE 'Record deleted!' TYPE 'S'.
  ELSE.
    MESSAGE 'There was an error!' TYPE 'E'.
  ENDIF.


ENDFORM.

"Form USER_COMMAND
FORM user_command USING p_ucomm    TYPE sy-ucomm
                        p_selfield TYPE slis_selfield.

      CASE p_ucomm.
        WHEN '&DATA_SAVE'.
          PERFORM f_save_data.

        WHEN '&DEL'.
          READ TABLE it_spfli INTO wa_spfli INDEX p_selfield-tabindex.
          PERFORM f_delete_data using wa_spfli.
          PERFORM get_data.

      ENDCASE.

      p_selfield-refresh = 'X'.
      p_selfield-row_stable = 'X'.
      p_selfield-col_stable = 'X'.

ENDFORM.
